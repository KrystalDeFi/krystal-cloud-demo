name: CI Build

on:
  push:
    branches:
      - main

env:
  CI_REGISTRY: asia.gcr.io
  CI_IMAGE_FOLDER: krystal-operation/krystal

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: Allow write access to checks to allow the action to annotate code in the PR.
  checks: write
  # The 'id-token: write' permission allows the workflow to generate and write OpenID Connect (OIDC) tokens.
  id-token: write  

jobs:
  build-and-push-js-app:
    name: Build the image and push to registry
    environment: dev
    runs-on: ubuntu-latest
    env:
      SERVICE_NAME: krystal-cloud-demo      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builder
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          endpoint: builder

      - name: Auth with GCP x GitHub OIDC
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/236698139289/locations/global/workloadIdentityPools/ops-workload-identity-pool/providers/github-action-provider'
          service_account: 'image-uploader-develop@krystal-operation.iam.gserviceaccount.com'

      - name: Setup Gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Docker build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.CI_REGISTRY }}/${{ env.CI_IMAGE_FOLDER }}/${{ env.SERVICE_NAME }}:${{ github.ref_name }}-${{ github.sha }}
            ${{ env.CI_REGISTRY }}/${{ env.CI_IMAGE_FOLDER }}/${{ env.SERVICE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.CI_REGISTRY }}/${{ env.CI_IMAGE_FOLDER }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          cache-to: type=inline
          provenance: false # https://github.com/docker/setup-buildx-action/issues/187
