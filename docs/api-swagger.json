{
    "schemes": ["https"],
    "swagger": "2.0",
    "info": {
        "description": "This is the Krystal Cloud API server for accessing pool and position data.",
        "title": "Krystal Cloud API",
        "termsOfService": "https://cloud.krystal.app",
        "contact": {
            "name": "Krystal API Support",
            "url": "https://cloud.krystal.app"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "cloud-api.krystal.app",
    "basePath": "/",
    "paths": {
        "/v1/chains": {
            "get": {
                "description": "Get list of all supported blockchain networks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chains"
                ],
                "summary": "Get supported chains",
                "responses": {
                    "200": {
                        "description": "List of supported chains",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "402": {
                        "description": "Payment required - No credit left",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/pools": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get basic information about pools with filtering and pagination options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pools"
                ],
                "summary": "Get pool basics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID (e.g., ethereum@1, polygon@137, bsc@56)",
                        "name": "chainId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Factory address to filter pools",
                        "name": "factoryAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Protocol name (e.g., uniswapv2, uniswapv3, etc.)",
                        "name": "protocol",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Token address to filter pools",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Sort by criteria (0: APR, 1: TVL, 2: Volume 24h, 3: Fee)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1000,
                        "description": "Minimum TVL filter in USD",
                        "name": "tvlFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1000,
                        "description": "Minimum 24h volume filter in USD",
                        "name": "volume24hFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1000,
                        "description": "Number of results to return (max 5000)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include incentive data",
                        "name": "withIncentives",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool basics response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "402": {
                        "description": "Payment required - No credit left",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/pools/{chainId}/{poolAddress}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get detailed information about a specific pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pools"
                ],
                "summary": "Get pool detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID (e.g., ethereum@1, polygon@137, bsc@56)",
                        "name": "chainId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pool address",
                        "name": "poolAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Factory address",
                        "name": "factoryAddress",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include incentive data",
                        "name": "withIncentives",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool detail information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "402": {
                        "description": "Payment required - No credit left",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/positions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all positions for a specific wallet address with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Get user positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet address",
                        "name": "wallet",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chain ID (e.g., ethereum@1, polygon@137, bsc@56)",
                        "name": "chainId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "OPEN",
                        "description": "Position status filter (OPEN, CLOSED)",
                        "name": "positionStatus",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Protocol names to filter by (e.g., Uniswap V3, Uniswap V2)",
                        "name": "protocols",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User positions information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "402": {
                        "description": "Payment required - No credit left",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/positions/{chainId}/{positionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get detailed information about a specific position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "positions"
                ],
                "summary": "Get position detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID (e.g., ethereum@1, polygon@137, bsc@56)",
                        "name": "chainId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Position ID ({NFPM address}-{TokenID})",
                        "name": "positionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position detail information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "402": {
                        "description": "Payment required - No credit left",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/protocols": {
            "get": {
                "description": "Get list of all supported DeFi protocols across all chains",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "protocols"
                ],
                "summary": "Get supported protocols",
                "responses": {
                    "200": {
                        "description": "List of supported protocols",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid API key",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "402": {
                        "description": "Payment required - No credit left",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "KC-APIKey",
            "in": "header"
        }
    }
}
